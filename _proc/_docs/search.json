[
  {
    "objectID": "groupengassign.html",
    "href": "groupengassign.html",
    "title": "GroupEngAssign",
    "section": "",
    "text": "source\n\nassign_groups\n\n assign_groups (groupeng_config:str)\n\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ngroupeng_config\nstr\nDirectory for the GroupEng config yml file\n\n\nReturns\n(<class ‘bool’>, <class ‘str’>)\nStatus and output directory of the compile file.\n\n\n\n\nprint(os.listdir(\"example\")) # take a look at the example files name\n\n['sample_group_specification.groupeng', '.DS_Store', 'sample_group_specification_annotated.groupeng', 'sample_class_1.csv', '.ipynb_checkpoints']\n\n\n\nstatus, outdir = assign_groups(\"example/sample_group_specification.groupeng\")\n\n\n# take a look at the output\nstatus, outdir\n\n(False, 'groups_example_2023-04-14_17-36-01')\n\n\nThe false means that at least one requirment is not satisfied. We can take a look at the file that was generated.\n\ndetails = pd.read_csv(os.path.join(outdir, \"example_details.csv\"), on_bad_lines='skip')\ndetails.head()\n\n\n\n\n\n  \n    \n      \n      ID\n      GPA\n      Gender\n      Ethnicity\n      Major\n      Skill1\n      Skill2\n      Skill3\n      Project choice\n      Group Number\n      Unnamed: 10\n      group GPA mean\n      Rules Broken\n    \n  \n  \n    \n      0\n      37\n      2.636350\n      M\n      -\n      Civ E\n      y\n      y\n      -\n      nanotech\n      1.0\n      NaN\n      NaN\n      NaN\n    \n    \n      1\n      41\n      2.225582\n      F\n      -\n      Civ E\n      y\n      y\n      y\n      robotics\n      1.0\n      NaN\n      NaN\n      NaN\n    \n    \n      2\n      61\n      4.220161\n      M\n      -\n      Mech E\n      -\n      -\n      y\n      statistics\n      1.0\n      NaN\n      NaN\n      NaN\n    \n    \n      3\n      63\n      2.976609\n      F\n      -\n      EE\n      y\n      -\n      y\n      automotive\n      1.0\n      NaN\n      NaN\n      NaN\n    \n    \n      4\n      75\n      3.775685\n      F\n      -\n      CS\n      y\n      y\n      y\n      statistics\n      1.0\n      NaN\n      NaN\n      NaN\n    \n  \n\n\n\n\nThe following package will generate Canvas and GitHub groups based on this generated csv files."
  },
  {
    "objectID": "gh_group_creation.html",
    "href": "gh_group_creation.html",
    "title": "GitHub Group Creation",
    "section": "",
    "text": "source\n\ncommand\n\n command (cmd:str)\n\nExecute the given command in shell\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ncmd\nstr\ncommand to call in bash\n\n\nReturns\n(<class ‘bool’>, <class ‘str’>)\nsuccess, output\n\n\n\n\nsource\n\n\ncheck_gh_auth\n\n check_gh_auth ()\n\nCheck whether you have gh auth configured\n\nsource\n\n\ngit_creat_repo_cmd\n\n git_creat_repo_cmd (repo_name:str, repo_org:str, template_repo:str,\n                     private_repo=True)\n\nGenerate the appropriate command for creating GitHub repository\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nrepo_name\nstr\n\nthe name of the created repository\n\n\nrepo_org\nstr\n\nthe GitHub organization name\n\n\ntemplate_repo\nstr\n\nthe template repository that the new repo will use\n\n\nprivate_repo\nbool\nTrue\nthe visibility of the repository\n\n\nReturns\nstr\n\nthe command of repo creation\n\n\n\n\n#｜ hide\ntest_eq(\n    'gh repo create --template COGS108/group_template --private --clone COGS108/Group01_SP23',\n    git_creat_repo_cmd(\"Group01_SP23\", \"COGS108\", \"COGS108/group_template\")\n)\ntest_eq(\n    'gh repo create --private --clone COGS108/Group01_SP23',\n    git_creat_repo_cmd(\"Group01_SP23\", \"COGS108\", None)\n)\ntest_eq(\n    'gh repo create --clone COGS108/Group01_SP23',\n    git_creat_repo_cmd(\"Group01_SP23\", \"COGS108\", None, private_repo=False)\n)\n\n\nsource\n\n\ngit_manage_access_cmd\n\n git_manage_access_cmd (repo_name:str, repo_org:str, collaorator_id:str,\n                        permission='push', add_team=False)\n\nGitHub CLI Command for modifying access priviliges of repo\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nrepo_name\nstr\n\nthe name of the created repository\n\n\nrepo_org\nstr\n\nthe GitHub organization name that the repo belongs to\n\n\ncollaorator_id\nstr\n\nthe GitHub id of the collaborator, or team name if add_team=True\n\n\npermission\nstr\npush\nthe permission to that collaborator\n\n\nadd_team\nbool\nFalse\nadd access to github org’s team\n\n\nReturns\nstr\n\nthe command of repo creation\n\n\n\nThe team must be in the same organization with the repos’ parent organization.\n\nsource\n\n\ncd_cmd\n\n cd_cmd (target_dir:str)\n\nUnix command for change directory\n\n\n\n\nType\nDetails\n\n\n\n\ntarget_dir\nstr\nthe target directory we want to change to\n\n\nReturns\nstr\nthe command of cd\n\n\n\n\nsource\n\n\ngit_rename_cmd\n\n git_rename_cmd (source:str, target:str)\n\nGitHub mv command to rename file in the directory\n\n\n\n\nType\nDetails\n\n\n\n\nsource\nstr\nthe original name of the file\n\n\ntarget\nstr\nthe target name of the file\n\n\nReturns\nstr\nthe command of git rename file\n\n\n\n\nsource\n\n\ngit_commit\n\n git_commit (commit_msg:str)\n\nGitHub commit command\n\n\n\n\nType\nDetails\n\n\n\n\ncommit_msg\nstr\nCommit Message\n\n\nReturns\nstr\nthe command for git commit\n\n\n\n\nsource\n\n\ngit_add_all\n\n git_add_all ()\n\n\nsource\n\n\ndelete_directory\n\n delete_directory (dir_name:str)\n\n\n\n\n\nType\nDetails\n\n\n\n\ndir_name\nstr\nthe directory that we want to delete\n\n\nReturns\nstr\nthe command for delete dir"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CanvasGroupy",
    "section": "",
    "text": "This module will use GroupEng to create canvas and github groups."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "CanvasGroupy",
    "section": "Install",
    "text": "Install\npip install CanvasGroupy"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "CanvasGroupy",
    "section": "How to use",
    "text": "How to use\nPlease visit GroupEng Official Website to see the documnetation of how to use GroupEng.\n\nassign_groups(\"example/sample_group_specification.groupeng\")\n\nNameError: name 'GroupEng' is not defined"
  }
]